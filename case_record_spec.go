// code generated by "gen"; DO NOT EDIT

package models

import "fmt"

func _() CaseRecord {
	var x = CaseRecord{}
	_ = x.ID
	_ = x.CreatedAt
	_ = x.UpdatedAt
	_ = x.DeletedAt
	_ = x.Status
	_ = x.Actors

	return x
}

type CaseRecordSpec struct {
	ID        bool
	CreatedAt bool
	UpdatedAt bool
	DeletedAt bool
	Status    bool
	Actors    bool
}

func (crs CaseRecordSpec) GetIncludedFields() []string {
	res := []string{}

	if crs.ID {
		res = append(res, "ID")
	}
	if crs.CreatedAt {
		res = append(res, "CreatedAt")
	}
	if crs.UpdatedAt {
		res = append(res, "UpdatedAt")
	}
	if crs.DeletedAt {
		res = append(res, "DeletedAt")
	}
	if crs.Status {
		res = append(res, "Status")
	}
	if crs.Actors {
		res = append(res, "Actors")
	}
	return res
}

func (crs *CaseRecordSpec) Set(key string, include bool) error {
	switch key {

	case "ID":
		crs.ID = include
		return nil

	case "CreatedAt":
		crs.CreatedAt = include
		return nil

	case "UpdatedAt":
		crs.UpdatedAt = include
		return nil

	case "DeletedAt":
		crs.DeletedAt = include
		return nil

	case "Status":
		crs.Status = include
		return nil

	case "Actors":
		crs.Actors = include
		return nil

	default:
		return fmt.Errorf("the field does not exist: %s", key)
	}
}

func (crs CaseRecordSpec) Get(key string) (bool, error) {
	switch key {

	case "ID":
		return crs.ID, nil
	case "CreatedAt":
		return crs.CreatedAt, nil
	case "UpdatedAt":
		return crs.UpdatedAt, nil
	case "DeletedAt":
		return crs.DeletedAt, nil
	case "Status":
		return crs.Status, nil
	case "Actors":
		return crs.Actors, nil
	default:
		return false, fmt.Errorf("the field does not exist: %s", key)
	}
}

func NewCaseRecordSpec(defaultValue bool) CaseRecordSpec {
	return CaseRecordSpec{

		ID:        defaultValue,
		CreatedAt: defaultValue,
		UpdatedAt: defaultValue,
		DeletedAt: defaultValue,
		Status:    defaultValue,
		Actors:    defaultValue,
	}
}

func (c CaseRecordSpec) GetMap() map[string]bool {
	return map[string]bool{
		"ID": c.ID, "CreatedAt": c.CreatedAt, "UpdatedAt": c.UpdatedAt, "DeletedAt": c.DeletedAt, "Status": c.Status, "Actors": c.Actors,
	}
}
