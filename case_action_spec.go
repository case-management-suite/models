// code generated by "gen"; DO NOT EDIT

package models

import "fmt"

func _() CaseAction {
	var x = CaseAction{}
	_ = x.ID
	_ = x.CreatedAt
	_ = x.UpdatedAt
	_ = x.DeletedAt
	_ = x.CaseRecord
	_ = x.CaseRecordID
	_ = x.Action

	return x
}

type CaseActionSpec struct {
	ID           bool
	CreatedAt    bool
	UpdatedAt    bool
	DeletedAt    bool
	CaseRecord   bool
	CaseRecordID bool
	Action       bool
}

func (crs CaseActionSpec) GetIncludedFields() []string {
	res := []string{}

	if crs.ID {
		res = append(res, "ID")
	}
	if crs.CreatedAt {
		res = append(res, "CreatedAt")
	}
	if crs.UpdatedAt {
		res = append(res, "UpdatedAt")
	}
	if crs.DeletedAt {
		res = append(res, "DeletedAt")
	}
	if crs.CaseRecord {
		res = append(res, "CaseRecord")
	}
	if crs.CaseRecordID {
		res = append(res, "CaseRecordID")
	}
	if crs.Action {
		res = append(res, "Action")
	}
	return res
}

func (crs *CaseActionSpec) Set(key string, include bool) error {
	switch key {

	case "ID":
		crs.ID = include
		return nil

	case "CreatedAt":
		crs.CreatedAt = include
		return nil

	case "UpdatedAt":
		crs.UpdatedAt = include
		return nil

	case "DeletedAt":
		crs.DeletedAt = include
		return nil

	case "CaseRecord":
		crs.CaseRecord = include
		return nil

	case "CaseRecordID":
		crs.CaseRecordID = include
		return nil

	case "Action":
		crs.Action = include
		return nil

	default:
		return fmt.Errorf("the field does not exist: %s", key)
	}
}

func (crs CaseActionSpec) Get(key string) (bool, error) {
	switch key {

	case "ID":
		return crs.ID, nil
	case "CreatedAt":
		return crs.CreatedAt, nil
	case "UpdatedAt":
		return crs.UpdatedAt, nil
	case "DeletedAt":
		return crs.DeletedAt, nil
	case "CaseRecord":
		return crs.CaseRecord, nil
	case "CaseRecordID":
		return crs.CaseRecordID, nil
	case "Action":
		return crs.Action, nil
	default:
		return false, fmt.Errorf("the field does not exist: %s", key)
	}
}

func NewCaseActionSpec(defaultValue bool) CaseActionSpec {
	return CaseActionSpec{

		ID:           defaultValue,
		CreatedAt:    defaultValue,
		UpdatedAt:    defaultValue,
		DeletedAt:    defaultValue,
		CaseRecord:   defaultValue,
		CaseRecordID: defaultValue,
		Action:       defaultValue,
	}
}

func (c CaseActionSpec) GetMap() map[string]bool {
	return map[string]bool{
		"ID": c.ID, "CreatedAt": c.CreatedAt, "UpdatedAt": c.UpdatedAt, "DeletedAt": c.DeletedAt, "CaseRecord": c.CaseRecord, "CaseRecordID": c.CaseRecordID, "Action": c.Action,
	}
}
