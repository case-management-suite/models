// code generated by "gen"; DO NOT EDIT

package models

import "fmt"

func _() CaseContext {
	var x = CaseContext{}
	_ = x.CaseRecord
	_ = x.Action

	return x
}

type CaseContextSpec struct {
	CaseRecord bool
	Action     bool
}

func (crs CaseContextSpec) GetIncludedFields() []string {
	res := []string{}

	if crs.CaseRecord {
		res = append(res, "CaseRecord")
	}
	if crs.Action {
		res = append(res, "Action")
	}
	return res
}

func (crs *CaseContextSpec) Set(key string, include bool) error {
	switch key {

	case "CaseRecord":
		crs.CaseRecord = include
		return nil

	case "Action":
		crs.Action = include
		return nil

	default:
		return fmt.Errorf("the field does not exist: %s", key)
	}
}

func (crs CaseContextSpec) Get(key string) (bool, error) {
	switch key {

	case "CaseRecord":
		return crs.CaseRecord, nil
	case "Action":
		return crs.Action, nil
	default:
		return false, fmt.Errorf("the field does not exist: %s", key)
	}
}

func NewCaseContextSpec(defaultValue bool) CaseContextSpec {
	return CaseContextSpec{

		CaseRecord: defaultValue,
		Action:     defaultValue,
	}
}

func (c CaseContextSpec) GetMap() map[string]bool {
	return map[string]bool{
		"CaseRecord": c.CaseRecord, "Action": c.Action,
	}
}
